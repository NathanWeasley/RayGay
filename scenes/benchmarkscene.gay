
/*
Benchmark scene som bruges til optimere kode med

Tid: 14:09 minutter
Light occlusion stack: 11:20
Udskyd fresnel udregning: 11:01
Inlining i raytracer: 10:25
Inlining Vector::xProduct(): 10:10
Bruger Boundingbox::intersect i KdTree: 9:14
const i kdtree: 9.04
simplere callstack til shadow: 9.00
Valg af bedste splitdimension: 7:18
fastIntersect og fullIntersect på object: 6:13
precalc sager i Triangle::_fastIntersect: 4:30
inline Object::fastIntersect: 4:04
Backface culling in Triangle::_fastIntersect: 3:00
Compiler flags: 2:37
Fjernet inline Vector math i Triange::_fastIntersect: 1:38
Fjernede Object::_intersect: 1:26
Faster stats: 1:23
Brug world_bbox i alle KdTree::intersects: 1:07
Surface Area Heuristic cost function: 0:42
Fixed SAH: 0:25
Omrokering i Triangle::_fastIntersect: 0:22
*/

renderer raytracer

camera { position <1000,1000,2000>
         up <0,1,0> 
         lookat <0,100,0> 
	 fov 45
	 aa 4
}

image { width 640 aspect 4 3 }

background <0.1,0.1,0.3,1.0>

light { point <100,1300,1300> } 

blue = material {
    diffuse <0.2,0.2,0.8>
    kd 0.4
    specular <1.0,1.0,1.0>
    ks 0.5
    specpow 15
}

grey85 = material {
    diffuse <0.85,0.85,0.85>
    kd 0.7
    specular <0.85,0.85,0.85>
    ks 0.3
    specpow 15
}

red = material {
    diffuse <0.8,0.2,0.2>
    kd 0.4
    specular <1.0,1.0,1.0>
    ks 0.5
    specpow 15
}

box { blue
    <-700,-50,-700>
	<700,0,700>	  
}

box { grey85 
      <-750,-50,-750>
      <750,-0.01,750>
}

extrusion {
    red
    spiral {
	circle { <0,300,0> 400 <0,1,0> }
	200 8 0
    }
    50
    12 
    100
}

