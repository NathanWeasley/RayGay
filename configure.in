
AC_INIT(raygay, 0.5, jesper@kalliope.org)    
AM_CONFIG_HEADER(config.h)    
AC_CONFIG_SRCDIR(src/main.cpp)
dnl AC_CONFIG_HEADERS([config.h:config.h.in])

RAYGAY_MAJOR_VERSION=0
RAYGAY_MINOR_VERSION=5    
RAYGAY_MICRO_VERSION=0    
RAYGAY_VERSION="$RAYGAY_MAJOR_VERSION.$RAYGAY_MINOR_VERSION.$RAYGAY_MICRO_VERSION"

AM_INIT_AUTOMAKE("raygay", $RAYGAY_VERSION)

AC_SUBST(RAYGAY_MAJOR_VERSION)
AC_SUBST(RAYGAY_MINOR_VERSION)
AC_SUBST(RAYGAY_MICRO_VERSION)

dnl PACKAGE=tracer
dnl VERSION=0.1

dnl -------------------------------------------------
dnl Check that the compiler and programs exists
dnl -------------------------------------------------
AC_PROG_CXX
AC_PROG_LIBTOOL

dnl -------------------------------------------------
dnl Check system and headers
dnl -------------------------------------------------
AC_C_BIGENDIAN
AC_C_INLINE
AC_HEADER_TIME
AC_C_LONG_DOUBLE
AC_CHECK_HEADERS(pthread.h)
AC_CHECK_HEADERS(jpeglib.h)    
AC_CHECK_HEADERS(png.h)    

dnl -------------------------------------------------
dnl Check for pkg-config
dnl -------------------------------------------------
AC_PATH_PROG(PKG_CONFIG,pkg-config,no)
if test "x$PKG_CONFIG" = "xno"; then
   echo "You need to install pkg-config to compile GTK+ stuff."
fi

dnl -------------------------------------------------
dnl Check libraries needed
dnl -------------------------------------------------
LIBS="$LIBS -lm"    
AC_CHECK_LIB(m, sin,,[AC_MSG_ERROR([math library is not found])],)
AC_CHECK_LIB(pthread, pthread_create,LIBS="-lpthread $LIBS")
AC_CHECK_LIB(jpeg, jpeg_read_header,JPEG_LIBS="-ljpeg")
AC_CHECK_LIB(png, png_read_info, PNG_LIBS="-lpng")
AC_SUBST(JPEG_LIBS)
AC_SUBST(PNG_LIBS)

dnl -------------------------------------------------
dnl Check for Guile
dnl -------------------------------------------------
GUILE_PROGS
GUILE_FLAGS
AC_SUBST(GUILE_CFLAGS)
AC_SUBST(GUILE_LDFLAGS)

if test "x$PKG_CONFIG" != "xno"; then
   echo -n "checking for gtk+2.0... "
   if pkg-config --exists gtk+-2.0; then
        echo "yes"
	pkg_modules="gtk+-2.0 >= 1.3"
	PKG_CHECK_MODULES(GTK, [$pkg_modules])
	AC_SUBST(GTK_CFLAGS)
	AC_SUBST(GTK_LIBS)
        GTK_LIBS="$GTK_LIBS -lgthread-2.0"
        AC_DEFINE([HAVE_GTK],[1],[Found GTK+-2.0. Will build the preview window.])
   else 
    	echo "no"
   fi    
fi

dnl -------------------------------------------------
dnl Add the CPU dependent compile optimizations
dnl -------------------------------------------------
CXXFLAGS="-g -O3 -Wall -Winline -ffast-math -pthread $GTK_CFLAGS $GUILE_CFLAGS"  
case $target in
     pentium3) CXXFLAGS="$CXXFLAGS -malign-double -march=pentium3 -mfpmath=sse -ftracer -mno-ieee-fp -fstrict-aliasing";;
     pentium4) CXXFLAGS="$CXXFLAGS -fprefetch-loop-arrays -funroll-loops -malign-double -fomit-frame-pointer -march=pentium4 -mfpmath=sse -ftracer -mno-ieee-fp -fstrict-aliasing -msse2";;
     g4) CXXFLAGS="$CXXFLAGS -ftracer -fstrict-aliasing";;
esac

dnl -------------------------------------------------
dnl Extra warning flags
dnl -------------------------------------------------
AC_MSG_CHECKING(whether --enable-extra-warnings is specified)
AC_ARG_ENABLE(extra-warnings, 
  [  --enable-extra-warnings        Enable extreme gcc-warnings.],
  [extra_warnings="yes"], [extra_warnings="no"])
if test "$extra_warnings" = yes; then
#   CXXFLAGS="$CXXFLAGS -W -Wunused -Wpadded -Waggregate-return"
   CXXFLAGS="$CXXFLAGS -W -Wunused -Wpadded -Wconversion" 
fi
AC_MSG_RESULT($extra_warnings)


dnl -------------------------------------------------
dnl Enable profiling
dnl -------------------------------------------------
AC_MSG_CHECKING(whether --enable-profile is specified)
AC_ARG_ENABLE(profile, 
  [  --enable-profile        Build a debugging version.],
  [build_profile="yes"], [build_profile="no"])
if test "$build_profile" = yes; then
   CXXFLAGS="$CXXFLAGS -pg"
   LDFLAGS="$LDFLAGS -pg"
fi
AC_MSG_RESULT($build_profile)

dnl -------------------------------------------------
dnl Write the makefiles
dnl -------------------------------------------------
AC_OUTPUT(Makefile \
	  src/Makefile \
	  src/materials/Makefile \
	  src/materials/normalperturbers/Makefile \
	  src/paths/Makefile \
	  src/lights/Makefile \
	  src/math/Makefile \
	  src/image/Makefile \
	  src/filters/Makefile \
	  src/parser/Makefile \
	  src/photon/Makefile \
	  src/objects/Makefile \
	  src/space/Makefile \
	  src/cameras/Makefile \
	  src/shaders/Makefile \
	  src/collections/Makefile \
	  src/samplers/Makefile \
	  scheme/Makefile	\
	  scenes/Makefile	\
	  test/Makefile		\
	  test/gfx/Makefile	\
	  test/scenes/Makefile)

echo "--------------------------------------------------------------"
echo "You can specify the target CPU to enable special optimizations"
echo "Example: ./configure --target=<cpu>"
echo
echo "Where <cpu> can be: pentium3, pentium4"
echo 
echo "--------------------------------------------------------------"

